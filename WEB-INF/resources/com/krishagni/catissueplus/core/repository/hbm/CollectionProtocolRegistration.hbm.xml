<?xml version='1.0' encoding='utf-8'?>
<!DOCTYPE hibernate-mapping PUBLIC
    "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
    "http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">

<hibernate-mapping auto-import="false">
  <class
    name="com.krishagni.catissueplus.core.biospecimen.domain.CollectionProtocolRegistration"
    table="CATISSUE_COLL_PROT_REG" lazy="true">

    <id name="id" column="IDENTIFIER">
      <generator class="native">
      	<param name="sequence">CATISSUE_COLL_PROT_REG_SEQ</param>
      </generator>
    </id>

    <property 
      name="consentSignatureDate" 
      type="java.util.Date"
      column="CONSENT_SIGN_DATE" />

    <property 
      name="signedConsentDocumentURL" 
      type="string"
      column="CONSENT_DOC_URL" />

    <property 
      name="protocolParticipantIdentifier" 
      type="string"
      column="PROTOCOL_PARTICIPANT_ID" />

    <property 
      name="barcode" 
      type="string" 
      column="BARCODE" />

    <property 
      name="registrationDate" 
      type="date" 
      column="REGISTRATION_DATE" />

    <property 
      name="activityStatus" 
      type="string" 
      column="ACTIVITY_STATUS" />

    <many-to-one 
      name="consentWitness" 
      class="com.krishagni.catissueplus.core.administrative.domain.User"
      column="CONSENT_WITNESS" />

    <many-to-one name="participant"
      class="com.krishagni.catissueplus.core.biospecimen.domain.Participant"
      cascade="save-update" column="PARTICIPANT_ID" />

    <many-to-one name="collectionProtocol"
      class="com.krishagni.catissueplus.core.biospecimen.domain.CollectionProtocol" column="COLLECTION_PROTOCOL_ID" />

    <set name="consentResponseCollection" table="CATISSUE_CONSENT_TIER_RESPONSE"
      inverse="true" cascade="all-delete-orphan">
      <key column="COLL_PROT_REG_ID" />
      <one-to-many
      	class="com.krishagni.catissueplus.core.biospecimen.domain.ConsentTierResponse" />
    </set>

    <set name="scgCollection" table="CATISSUE_SPECIMEN_COLL_GROUP"
      cascade="save-update">
      <key column="COLLECTION_PROTOCOL_REG_ID" />

      <one-to-many
      	class="com.krishagni.catissueplus.core.biospecimen.domain.SpecimenCollectionGroup" />
    </set>

    <sql-query name="getScgAndSpecimenCount">
      <return-scalar column="cprId" type="long"/>
      <return-scalar column="scgCount" type="long"/>
      <return-scalar column="specimenCount" type="long"/>
                  
      select
        cpr.identifier as cprId, count(distinct scg.identifier) as scgCount, count(distinct sp.identifier) as specimenCount
      from
        catissue_collection_protocol cp
        inner join catissue_coll_prot_reg cpr on cpr.collection_protocol_id = cp.identifier and cpr.activity_status = 'Active'
        left join catissue_specimen_coll_group scg on scg.collection_protocol_reg_id = cpr.identifier and scg.collection_status = 'Complete'
        left join catissue_specimen sp on sp.specimen_collection_group_id = scg.identifier and sp.collection_status = 'Collected'
      where
        cp.activity_status = 'Active' and cp.identifier = :cpId
      group by
        cpr.identifier
      order by
        cpr.identifier
    </sql-query>

    <query name="getParticipantsByCpId">
      select 
        cpr.id, participant.id,  
        cpr.protocolParticipantIdentifier 
      from 
        CollectionProtocolRegistration cpr inner join 
        cpr.participant participant 
        inner join cpr.collectionProtocol cp 
      where cp.id = :cpId and cpr.activityStatus != 'Disabled' and 
        participant.activityStatus != 'Disabled'
    </query>
        
    <query name="getPhiParticipantsByCpId">
      select 
        cpr.id, participant.id, cpr.protocolParticipantIdentifier, participant.firstName, participant.lastName 
      from CollectionProtocolRegistration cpr inner join 
        cpr.participant participant 
        inner join cpr.collectionProtocol cp 
      where cp.id = :cpId and cpr.activityStatus != 'Disabled' and 
        participant.activityStatus != 'Disabled'
    </query>

    <query name="getParticipantsByCpIdAndSearchTerm">
      select
        cpr.id, participant.id, cpr.protocolParticipantIdentifier 
      from
        CollectionProtocolRegistration cpr
        inner join
        cpr.participant participant
        inner join cpr.collectionProtocol cp
      where
        cp.id = :cpId
        and (
        lower(cpr.protocolParticipantIdentifier) like :searchTerm
        )
        and
        cpr.activityStatus != 'Disabled' and participant.activityStatus != 'Disabled'
    </query>
        
    <query name="getPhiParticipantsByCpIdAndSearchTerm">
      select
        cpr.id, participant.id, cpr.protocolParticipantIdentifier, participant.firstName, participant.lastName 
      from
        CollectionProtocolRegistration cpr
        inner join
        cpr.participant participant
        inner join cpr.collectionProtocol cp
      where
        cp.id = :cpId
        and (
        lower(participant.firstName) like :searchTerm or
        lower(participant.lastName) like :searchTerm or
        lower(cpr.protocolParticipantIdentifier) like :searchTerm
        )
        and
        cpr.activityStatus != 'Disabled' and participant.activityStatus != 'Disabled'
    </query>
        
    <query name="getParticipantByCPAndParticipantId">
      select
        cpr.id, participant.id, cpr.protocolParticipantIdentifier 
      from
        CollectionProtocolRegistration cpr
        inner join
        cpr.participant participant
        inner join cpr.collectionProtocol cp
      where
        cp.id = :cpId
        and 
        participant.id = :participantId
        and
        cpr.activityStatus != 'Disabled' and participant.activityStatus != 'Disabled'
    </query>

    <query name="getPhiParticipantByCPAndParticipantId">
      select
        cpr.id, participant.id, cpr.protocolParticipantIdentifier, participant.lastName, participant.firstName 
      from
        CollectionProtocolRegistration cpr
        inner join
        cpr.participant participant
        inner join cpr.collectionProtocol cp
      where
        cp.id = :cpId
        and participant.id = :participantId 
        and cpr.activityStatus != 'Disabled' 
        and participant.activityStatus != 'Disabled'
    </query>

    <query name="getCollectionGroupsByCprId">
      select 
        scg.id,scg.name,scg.collectionStatus,
        scg.receivedTimestamp,
        scg.collectionProtocolEvent.id,scg.collectionProtocolEvent.studyCalendarEventPoint,
        scg.collectionProtocolEvent.collectionPointLabel,
        scg.collectionProtocolRegistration.registrationDate 
      from
        SpecimenCollectionGroup as scg 
      where
        scg.collectionProtocolRegistration.id = :cprId and scg.activityStatus
        != 'Disabled' order by
        scg.collectionProtocolEvent.studyCalendarEventPoint
    </query>
    <query name="getCprByPpidAndCpTitle">
      from 
        com.krishagni.catissueplus.core.biospecimen.domain.CollectionProtocolRegistration cpr
      where
        cpr.collectionProtocol.title = :cpTitle and
        cpr.protocolParticipantIdentifier = :ppid
    </query>
  </class>
</hibernate-mapping>

